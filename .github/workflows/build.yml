# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
    tags:
          - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build
      run: |
        go build -v ./...
        pwd

    - name: Test
      run: go test -v ./...

    - name: Upload Go results
      uses: actions/upload-artifact@v4
      with:
        name: http-server
        path: /home/runner/work/http-server/http-server

  dockerfile:
    name: Build Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get artifacts
        uses: actions/download-artifact@master
        with:
          name: http-server
          path: /home/runner/work/http-server/http-server
      
      # - uses: actions/checkout@v4
      # 提取 Docker 元数据（标签和标签）
      # - name: Extract Docker metadata
      #   id: meta
      #   # 使用 Docker metadata-action 提取元数据
      #   uses: docker/metadata-action@v4
      #   with:
      #     # 使用定义的镜像名称
      #     images: http-server
      #     tags: |
      #       # 设置最新标签
      #       type=raw,value=latest,enable={{is_default_branch}}
      #       # 设置基于标签的标签
      #       type=ref,enable=true,priority=600,prefix=,suffix=,event=tag
        
      - uses: jerray/publish-docker-action@v1.0.5
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            tags: latest
            registry: registry.cn-hangzhou.aliyuncs.com
            repository: joeyzz/http-server